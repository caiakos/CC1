#Usando a base de dados BDEX1_HOSPITAL, responda:
USE BDEX1_HOSPITAL;

# 1 - Exibir todas as informações da tabela PACIENTES.
SELECT * FROM PACIENTES;

# 2 - Mostrar os nomes e e-mails dos pacientes que nasceram depois do ano 2000.
SELECT NOME, EMAIL FROM PACIENTES
WHERE YEAR(DATA_NASC) > 2000;

# 3 - Listar os nomes dos médicos e as especialidades em que trabalham.
DESC DEPARTAMENTOS;
SELECT MED.NOME, IF(DEPTO.NOME_ESPECIALIDADE IS NULL, 'Clinico Geral',DEPTO.NOME_ESPECIALIDADE) ESPECIALIDADE
FROM MEDICOS MED
LEFT JOIN DEPARTAMENTOS DEPTO
ON MED.DEPTO_COD_ESPEC = DEPTO.COD_ESPECIALIDADE
ORDER BY MED.NOME;

# 4 - Exibir os detalhes das consultas: ID da consulta, data, hora, nome do médico e nome do paciente.
SELECT CON.ID_CONSULTA, CON.DATA_CONS DATA, CON.HORA_CONS HORA, MED.NOME MEDICO, PAC.NOME PACIENTE
FROM CONSULTAS CON
INNER JOIN MEDICOS MED 
ON MED.CRM = CON.CRM AND MED.UF = CON.UF
INNER JOIN PACIENTES PAC 
ON PAC.CPF_PACIENTE = CON.CPF_PACIENTE;

# 5 - Listar o nome dos pacientes e quantas consultas cada um fez.
SELECT PAC.NOME PACIENTE, COUNT(*) AS CONSULTAS
FROM CONSULTAS CON RIGHT JOIN PACIENTES PAC 
ON PAC.CPF_PACIENTE = CON.CPF_PACIENTE
GROUP BY PACIENTE;

# 6 - Mostrar as especialidades de médicos que fizeram consultas em 2024.
SELECT DISTINCT DEPTO.NOME_ESPECIALIDADE
FROM DEPARTAMENTOS DEPTO
INNER JOIN MEDICOS MED 
ON MED.DEPTO_COD_ESPEC = DEPTO.COD_ESPECIALIDADE
INNER JOIN CONSULTAS CON 
ON MED.CRM = CON.CRM AND MED.UF = CON.UF
WHERE YEAR(CON.DATA_CONS) = 2024;

# 7 - Listar todos os departamentos, ordenados pelo nome da especialidade de A a Z.
SELECT NOME_ESPECIALIDADE AS DEPTO
FROM DEPARTAMENTOS
ORDER BY DEPTO;

# 8 - Mostrar os nomes e e-mails dos médicos que não têm telefone cadastrado.
SELECT NOME, EMAIL
FROM MEDICOS
WHERE TELEFONE IS NULL OR TELEFONE = '';

# 9 - Exibir os nomes dos pacientes que têm consultas com médicos do departamento de Cardiologia.
SELECT DISTINCT PAC.NOME
FROM PACIENTES PAC
INNER JOIN CONSULTAS CON
ON PAC.CPF_PACIENTE = CON.CPF_PACIENTE
INNER JOIN MEDICOS MED
ON CON.CRM = MED.CRM AND CON.UF = MED.UF
INNER JOIN DEPARTAMENTOS DEPTO
ON DEPTO.COD_ESPECIALIDADE = MED.DEPTO_COD_ESPEC
WHERE DEPTO.NOME_ESPECIALIDADE = 'CARDIOLOGIA';

# 10 - Para cada especialidade, mostrar o nome da especialidade e a média de consultas realizadas pelos médicos dessa especialidade.
SELECT ESPEC AS ESPECIALIDADE, ROUND(AVG(QUANT),2) AS MEDIA
FROM (
		SELECT DEPTO.NOME_ESPECIALIDADE AS ESPEC,
		COUNT(ID_CONSULTA) AS QUANT FROM CONSULTAS CON
		INNER JOIN MEDICOS MED
		ON CON.CRM = MED.CRM AND CON.UF = MED.UF
		INNER JOIN DEPARTAMENTOS DEPTO
		ON DEPTO.COD_ESPECIALIDADE = MED.DEPTO_COD_ESPEC
		GROUP BY DEPTO.NOME_ESPECIALIDADE) AS BASE
GROUP BY ESPEC;

# 11 - Contar quantos pacientes têm um telefone cadastrado.
SELECT COUNT(*) CONT_TELEFONE FROM PACIENTES
WHERE TELEFONE IS NOT NULL OR '';

# 12 - Listar os nomes dos médicos que fizeram mais de 10 consultas.
SELECT MED.NOME FROM MEDICOS MED
JOIN CONSULTAS CONS
ON CONS.CRM = MED.CRM AND CONS.UF = MED.UF
GROUP BY MED.NOME
HAVING COUNT(CONS.ID_CONSULTA) > 10;

# 13 - Mostrar o nome dos pacientes e a data da última consulta que eles fizeram.
SELECT PAC.NOME AS PACIENTE,
CONCAT_WS('/',DAY(MAX(CONS.DATA_CONS)),MONTH(MAX(CONS.DATA_CONS)),YEAR(MAX(CONS.DATA_CONS))) AS ULTIMA_CONSULTA
FROM PACIENTES PAC
INNER JOIN CONSULTAS CONS
ON CONS.CPF_PACIENTE = PAC.CPF_PACIENTE
GROUP BY PAC.NOME;

# 14 - Contar quantas consultas cada médico realizou.
SELECT MED.NOME, COUNT(CONS.ID_CONSULTA) 
FROM MEDICOS MED 
LEFT JOIN CONSULTAS CONS
ON CONS.CRM = MED.CRM AND CONS.UF = MED.UF
GROUP BY MED.NOME;

# 15 - Para cada paciente que fez uma consulta, mostrar o CPF, o nome e a porcentagem de consultas em relação ao total de consultas feitas por todos os pacientes.
SELECT PACIENTE,CPF, CONCAT(ROUND((QTDE_PAC/QTDE_GERAL)*100,1),'%') AS PORCENTAGEM
FROM (	SELECT PAC.NOME AS PACIENTE, 
	PAC.CPF_PACIENTE AS CPF, 
	COUNT(CONS.ID_CONSULTA) AS QTDE_PAC
	FROM PACIENTES PAC
	LEFT JOIN CONSULTAS CONS
	ON PAC.CPF_PACIENTE = CONS.CPF_PACIENTE
	GROUP BY PACIENTE) AS QUANTIDADE_POR_PACIENTE
JOIN (	SELECT COUNT(*) AS QTDE_GERAL
	FROM CONSULTAS ) AS QUANTIDADE_TOTAL
GROUP BY PACIENTE;



